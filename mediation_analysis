#! /usr/bin/env Rscript
---
title: Figure1-Manuscript-Mediaiton analysis of the asthma17:37.2-38.8Mb locus.
author: "Chief Ben-Eghan"
date: "2/1/2022"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

# R Markdown
Load the required packages
```{r}


###baseline model 1

library(data.table)
library(dplyr)
library(tidyverse)


pheno9=fread("pheno9")
chunk1.geno=fread("chunk_1.genotypes.raw")
chunk1.geno=chunk1.geno[,-c(1:6)]

y=pheno9[,c(9,10,11,13)]
y=as.data.frame(y)
y=as.data.frame(pheno9$Asthma6_bolt)
x=as.data.frame(chunk1.geno)

#9 is 18-40yrs, column 1
#10 is > 40 yrs, column 2
#11 <18years, column 3
#13 <40 years, column 4


start_time <- Sys.time()
out <- data.frame(NULL)              # create object to keep results
for (i in 1:length(x)) {
  m <- summary(glm(y[,3] ~ x[,i], family="binomial"))    # run model
  out[i, 1] <- names(x)[i]           # print variable name
  out[i, 2] <- m$coefficients[1,1]   # intercept
  out[i, 3] <- m$coefficients[2,1]  #coefficient
  out[i, 4] <- m$coefficients[2,4] # p-value
  out[i, 5] <- exp(m$coefficients[2,1]) # exponential-OR
  
}
end_time <- Sys.time()
print(end_time - start_time)
gc()
names(out) <- c("SNP", "intercept", "coef.x", "p-value", "OR_0")
rm(m)
fwrite(out, "/Users/chiefeghan/Desktop/OPEN/TABLE/AST6_BASELINE/ast6.results.baseline", sep="\t", row.names=FALSE, quote=FALSE)



#for <18yrs

#t1.R=BASO
#t2.R=BASO%
#t3.R=EOS#
#t4.R=EOS%
#t5.R=LYM#
#t6.R=LYM%
#t7.R=MON#
#t8.R=MON%
#t9.R=NEU#
#t10.R=NEU%
#t11.R=WBC#



#for i in {1..11}; do t$.R; done 


#t1.R
##BASO# or b1 in <18yrs

##model 3

pheno9=fread("pheno9")
chunk1.geno=fread("chunk_1.genotypes.raw")
chunk1.geno=chunk1.geno[,-c(1:6)]

cov.EUR=fread("cov.EUR")
pheno9$E1.pheno=cov.EUR[match(pheno9$FID, cov.EUR$FID),"eos_INV"]
pheno9$E2.pheno=cov.EUR[match(pheno9$FID, cov.EUR$FID),"eosP_INV"]
pheno9$N1.pheno=cov.EUR[match(pheno9$FID, cov.EUR$FID),"neutro_INV"]
pheno9$N2.pheno=cov.EUR[match(pheno9$FID, cov.EUR$FID),"neutroP_INV"]
pheno9$W1.pheno=cov.EUR[match(pheno9$FID, cov.EUR$FID),"wbc_INV"]
pheno9$L1.pheno=cov.EUR[match(pheno9$FID, cov.EUR$FID),"lym_INV"]
pheno9$L2.pheno=cov.EUR[match(pheno9$FID, cov.EUR$FID),"lymP_INV"]
pheno9$B1.pheno=cov.EUR[match(pheno9$FID, cov.EUR$FID),"baso_INV"]
pheno9$B2.pheno=cov.EUR[match(pheno9$FID, cov.EUR$FID),"basoP_INV"]
pheno9$M1.pheno=cov.EUR[match(pheno9$FID, cov.EUR$FID),"mono_INV"]
pheno9$M2.pheno=cov.EUR[match(pheno9$FID, cov.EUR$FID),"monoP_INV"]

#9 is 18-40yrs, column 1
#10 is > 40 yrs, column 2
#11 <18years, column 3
#13 <40 years, column 4
#column 5 is BASO# or b1


y=pheno9[,c(9,10,11,13,43,44,45,46,47,48,49,50,51,52,53)]
y=as.data.frame(y)
x=as.data.frame(chunk1.geno)

start_time <- Sys.time()
out <- data.frame(NULL)              # create object to keep results
for (i in 1:length(x)) {
  m <- summary(glm(y[,3] ~ x[,i]+y[,5], family="binomial"))    # run model
  out[i, 1] <- names(x)[i]           # print variable name
  out[i, 2] <- m$coefficients[1,1]   # intercept
  out[i, 3] <- m$coefficients[2,1]  #coefficient
  out[i, 4] <- m$coefficients[2,4] # p-value
  out[i, 5] <- exp(m$coefficients[2,1]) # exponential-OR
  out[i ,6] <- m$coefficients[3,1]  #phenotype.coefficient
  
}
end_time <- Sys.time()
print(end_time - start_time)
gc()
names(out) <- c("SNP", "intercept.b1", "coef.b1", "p.b1", "OR.b1", "B1.coef")
rm(m)
fwrite(out, "/Users/chiefeghan/Desktop/OPEN/TABLE/AST6_RES/ast6.BASO#.exp", sep="\t", row.names=FALSE, quote=FALSE)

```







